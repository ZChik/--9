#define _CRT_SECURE_NO_WARNINGS 
#include <stdio.h> 
#define MAXLINE 1024 
#define YES 1 
#define NO 0 
int main()
{
	FILE *fpin;//входной файл 
	FILE *fpout;//выходной файл 
	char line[MAXLINE];//текущая строка 
	char *buf_ptr;//указатель на адрес обрабатываемого элемента строки 
	char *start_ptr;//указатель на адрес элемента начала слова 
	char *stop_ptr;//указатель на адрес элемента конца слова 
	char *prev_start_ptr;//указатель на адрес элемента начала предыдущего слова 
	char *prev_stop_ptr;//указатель на адрес элемента конца предыдущего слова 
	int flag;//в слове или нет обрабатываемый элемент 
	prev_stop_ptr = prev_start_ptr = start_ptr = stop_ptr = buf_ptr = 0;
	flag = NO;

	fpin = fopen("test.txt", "rt");//открываем файл для чтения 
	if (!fpin)//ошибка при открытии файла 
		return 1;

	fpout = fopen("result.txt", "wt");//открываем файл для записи 
	if (!fpout)//ошибка при открытии файла 
		return 1;

	while (!feof(fpin))// цикл до конца входного файла 
	{
		fscanf(fpin, "%s%^[\n]", line);
		buf_ptr = line;
		if (buf_ptr == NULL)
			break;//файл исчерпан 
		while (*buf_ptr != '\0')//цикл до конца строки 
		{
			do
			{
				if ((*buf_ptr<'a' || *buf_ptr>'z') && (*buf_ptr<'A' || *buf_ptr>'Z'))
				{
					if (flag == YES)
					{
						stop_ptr = buf_ptr - 1;

						flag = NO;
					}
				}
				else
				{
					if (flag == NO)
					{
						prev_stop_ptr = stop_ptr;//запоминаем адрес конца предыдущего слова 
						prev_start_ptr = start_ptr;//запоминаем адрес начала предыдущего слова 

						start_ptr = buf_ptr;

						flag = YES;
					}
				}

				buf_ptr++;
			} while (*buf_ptr != '\0');
			prev_stop_ptr += 1;
			while (*prev_start_ptr != '\0')
			{
				*prev_start_ptr = *prev_stop_ptr;
				prev_stop_ptr++;
				prev_start_ptr++;
			}
			*prev_stop_ptr = '\0';
		}
		fprintf(fpout, "%s%^[\n]", line);
	}
	fclose(fpin);//закрыть входной файл 
	fclose(fpout);//закрыть выходной файл 
	printf("prog done\n");
	return 0;
}